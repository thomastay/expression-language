// Code generated by "stringer -type Instruction"; DO NOT EDIT.

package bytecode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpConst-0]
	_ = x[OpLoad-1]
	_ = x[OpAdd-2]
	_ = x[OpMinus-3]
	_ = x[OpMul-4]
	_ = x[OpDiv-5]
	_ = x[OpAnd-6]
	_ = x[OpMod-7]
	_ = x[OpLt-8]
	_ = x[OpGt-9]
	_ = x[OpGe-10]
	_ = x[OpLe-11]
	_ = x[OpReturn-12]
	_ = x[OpBr-13]
	_ = x[OpBrIf-14]
	_ = x[OpBrIfOrPop-15]
	_ = x[OpBrIfFalseOrPop-16]
}

const _Instruction_name = "OpConstOpLoadOpAddOpMinusOpMulOpDivOpAndOpModOpLtOpGtOpGeOpLeOpReturnOpBrOpBrIfOpBrIfOrPopOpBrIfFalseOrPop"

var _Instruction_index = [...]uint8{0, 7, 13, 18, 25, 30, 35, 40, 45, 49, 53, 57, 61, 69, 73, 79, 90, 106}

func (i Instruction) String() string {
	if i < 0 || i >= Instruction(len(_Instruction_index)-1) {
		return "Instruction(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Instruction_name[_Instruction_index[i]:_Instruction_index[i+1]]
}
